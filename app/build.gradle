apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

Map<String, String> compileDependencies = rootProject.ext.dependencies;
Map<String, String> testDependencies = rootProject.ext.testDependencies;

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.github.rodrigohenriques.rxmarvel"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "MARVEL_PRIVATE_KEY", "\"${getLocalProperty('marvel.key.private')}\"")
        buildConfigField("String", "MARVEL_PUBLIC_KEY", "\"${getLocalProperty('marvel.key.public')}\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Support Libraries
    compile compileDependencies.supportPercent
    compile compileDependencies.supportAnnotations
    compile compileDependencies.recyclerView
    compile compileDependencies.appCompat
    compile compileDependencies.cardView
    compile compileDependencies.supportV4
    compile compileDependencies.supportDesign

    // Play Services
    compile compileDependencies.playServicesLocation

    // ButterKnife
    compile compileDependencies.butterknife
    apt compileDependencies.butterknifeCompiler

    // Utils
    compile compileDependencies.calligraphy
    compile compileDependencies.prettyTime
    compile compileDependencies.glide
    compile compileDependencies.favor

    // Dagger 2
    compile compileDependencies.dagger2
    provided compileDependencies.jsr250
    apt compileDependencies.dagger2Compiler

    // Retrofit and OkHttp
    compile compileDependencies.retrofit
    compile compileDependencies.retrofitConverterGson
    compile compileDependencies.retrofitAdapterRxJava
    compile compileDependencies.okhttp
    compile compileDependencies.okhttp3LoggingInterceptor

    // ReactiveX
    compile compileDependencies.rxJava
    compile compileDependencies.rxAndroid
    compile compileDependencies.rxBinding
    compile compileDependencies.rxBindingDesign
    compile compileDependencies.rxLifecycle
    compile compileDependencies.rxLifecycleComponents
    compile compileDependencies.rxLocation

    testCompile testDependencies.supportAnnotations
    testCompile testDependencies.junit
    testCompile testDependencies.mockito
    testCompile testDependencies.hamcrest
    testCompile testDependencies.junitRunner
    testCompile testDependencies.junitRules
    testCompile testDependencies.espresso
    testCompile testDependencies.uiautomator
}

String getLocalProperty(String propertyName) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    properties.getProperty(propertyName)
}
